{"version":3,"sources":["components/useReducer/TodoAdd.js","hooks/useForm.js","components/useReducer/TodoListItem.js","components/useReducer/TodoList.js","components/useReducer/todoReducer.js","components/useReducer/TodoApp.js","index.js"],"names":["TodoAdd","handleAddTodo","initialState","useState","values","setValues","target","name","value","useForm","description","handleInputChanges","reset","onSubmit","e","preventDefault","trim","length","newTodo","id","Date","getTime","desc","done","type","className","placeholder","autoComplete","onChange","TodoListItem","todo","index","handleToggle","handleDelete","onClick","TodoList","todos","map","i","todoReducer","state","action","payload","filter","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8eb6b4a9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\n\r\nexport const TodoAdd = ({ handleAddTodo }) => {\r\n  const [{ description }, handleInputChanges, reset] = useForm({\r\n    description: \"\",\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Block empty content from uploading.\r\n    if (description.trim().length <= 1) {\r\n      return;\r\n    }\r\n    const newTodo = {\r\n      id: new Date().getTime(),\r\n      desc: description,\r\n      done: false,\r\n    };\r\n\r\n    handleAddTodo(newTodo);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h4>Add TODO</h4>\r\n      <hr />\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"description\"\r\n          className=\"form-control\"\r\n          placeholder=\"Learn...\"\r\n          autoComplete=\"off\"\r\n          value={description}\r\n          onChange={handleInputChanges}\r\n        />\r\n\r\n        <button className=\"btn btn-outline-primary mt-1 btn-block\">Add</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  };\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n  return [values, handleInputChange, reset];\r\n};\r\n","import React from \"react\";\r\n\r\nexport const TodoListItem = ({ todo, index, handleToggle, handleDelete }) => {\r\n  return (\r\n    <li key={todo.id} className=\"list-group-item\">\r\n      <p\r\n        className={`${todo.done && \"complete\"}`}\r\n        onClick={() => handleToggle(todo.id)}\r\n      >\r\n        {index + 1}. {todo.desc}\r\n      </p>\r\n      <button onClick={() => handleDelete(todo.id)} className=\"btn btn-danger\">\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { TodoListItem } from \"./TodoListItem\";\r\n\r\nexport const TodoList = ({ todos, handleDelete, handleToggle }) => {\r\n  return (\r\n    <ul className=\"list-group list-group-flush\">\r\n      {todos.map((todo, i) => (\r\n        <TodoListItem\r\n          key={todo.id}\r\n          todo={todo}\r\n          index={i}\r\n          handleToggle={handleToggle}\r\n          handleDelete={handleDelete}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","export const todoReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"add\":\r\n      return [...state, action.payload];\r\n\r\n    case \"delete\":\r\n      return state.filter((todo) => todo.id !== action.payload); //group numbers id\r\n\r\n    case \"toggle\":\r\n      return state.map((todo) =>\r\n        todo.id === action.payload ? { ...todo, done: !todo.done } : todo\r\n      );\r\n\r\n    case \"toggle-old\":\r\n      return state.map((todo) => {\r\n        if (todo.id === action.payload) {\r\n          return {\r\n            ...todo,\r\n            done: !todo.done,\r\n          };\r\n        } else {\r\n          return todo;\r\n        }\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useEffect, useReducer } from \"react\";\r\n\r\nimport \"./styles.css\";\r\nimport { TodoAdd } from \"./TodoAdd\";\r\nimport { TodoList } from \"./TodoList\";\r\nimport { todoReducer } from \"./todoReducer\";\r\n\r\nconst init = () => {\r\n  return JSON.parse(localStorage.getItem(\"todos\")) || [];\r\n\r\n  //   return [\r\n  //     {\r\n  //       id: new Date().getTime(),\r\n  //       desc: \"Learn React\",\r\n  //       done: false,\r\n  //     },\r\n  //   ];\r\n};\r\n\r\nexport const TodoApp = () => {\r\n  const [todos, dispatch] = useReducer(todoReducer, [], init);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  const handleDelete = (todoId) => {\r\n    const action = {\r\n      type: \"delete\",\r\n      payload: todoId,\r\n    };\r\n\r\n    dispatch(action);\r\n  };\r\n\r\n  const handleToggle = (todoId) => {\r\n    dispatch({\r\n      type: \"toggle\",\r\n      payload: todoId,\r\n    });\r\n  };\r\n\r\n  const handleAddTodo = (newTodo) => {\r\n    dispatch({\r\n      type: \"add\",\r\n      payload: newTodo,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>TodoApp ({todos.length})</h1>\r\n      <hr />\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-7\">\r\n          <TodoList\r\n            todos={todos}\r\n            handleDelete={handleDelete}\r\n            handleToggle={handleToggle}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-5\">\r\n          <TodoAdd handleAddTodo={handleAddTodo} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { TodoApp } from \"./components/useReducer/TodoApp\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoApp />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}